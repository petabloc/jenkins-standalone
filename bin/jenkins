#!/bin/bash

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_DIR="$(dirname "$SCRIPT_DIR")"

# Load configuration file
CONFIG_FILE="${PROJECT_DIR}/conf/jenkins.conf"
if [ -f "$CONFIG_FILE" ]; then
    source "$CONFIG_FILE"
else
    echo "Warning: Configuration file not found at $CONFIG_FILE"
    echo "Using default values..."
fi

# Set defaults if not defined in config
HTTP_PORT=${HTTP_PORT:-8080}
JVM_XMS=${JVM_XMS:-512m}
JVM_XMX=${JVM_XMX:-2g}
JVM_OPTS=${JVM_OPTS:-"-server -Djava.awt.headless=true"}
JENKINS_OPTS=${JENKINS_OPTS:-"--sessionTimeout=0"}
LOG_LEVEL=${LOG_LEVEL:-INFO}
DEVELOPMENT_MODE=${DEVELOPMENT_MODE:-false}
BIND_ADDRESS=${BIND_ADDRESS:-0.0.0.0}

export JAVA_HOME="${PROJECT_DIR}/lib/jdk"
export PATH="${JAVA_HOME}/bin:${PATH}"

# Use custom JENKINS_HOME if specified, otherwise use default
if [ -n "$JENKINS_HOME_OVERRIDE" ]; then
    if [[ "$JENKINS_HOME_OVERRIDE" = /* ]]; then
        export JENKINS_HOME="$JENKINS_HOME_OVERRIDE"
    else
        export JENKINS_HOME="${PROJECT_DIR}/$JENKINS_HOME_OVERRIDE"
    fi
else
    export JENKINS_HOME="${PROJECT_DIR}/jenkins_home"
fi

JENKINS_WAR="${PROJECT_DIR}/lib/jenkins.war"
JENKINS_LOG="${PROJECT_DIR}/logs/jenkins.log"
JENKINS_PID="${PROJECT_DIR}/jenkins.pid"

case "$1" in
    start)
        if [ -f "$JENKINS_PID" ]; then
            PID=$(cat "$JENKINS_PID")
            if kill -0 "$PID" 2>/dev/null; then
                echo "Jenkins is already running (PID: $PID)"
                exit 1
            else
                echo "Removing stale PID file"
                rm -f "$JENKINS_PID"
            fi
        fi
        
        echo "Starting Jenkins..."
        echo "Jenkins Home: $JENKINS_HOME"
        echo "Java Home: $JAVA_HOME"
        echo "HTTP Port: $HTTP_PORT"
        echo "JVM Memory: Xms=$JVM_XMS Xmx=$JVM_XMX"
        echo "Log file: $JENKINS_LOG"
        
        # Ensure log directory exists
        mkdir -p "$(dirname "$JENKINS_LOG")"
        
        # Build Jenkins command with configuration
        JAVA_CMD="java -Xms$JVM_XMS -Xmx$JVM_XMX $JVM_OPTS -jar $JENKINS_WAR"
        JENKINS_CMD="$JAVA_CMD --httpPort=$HTTP_PORT --httpListenAddress=$BIND_ADDRESS $JENKINS_OPTS"
        
        # Add development mode if enabled
        if [ "$DEVELOPMENT_MODE" = "true" ]; then
            JENKINS_CMD="$JENKINS_CMD --debug=5"
        fi
        
        # Start Jenkins in background
        nohup $JENKINS_CMD > "$JENKINS_LOG" 2>&1 &
        
        JENKINS_PID_VALUE=$!
        echo $JENKINS_PID_VALUE > "$JENKINS_PID"
        
        echo "Jenkins started with PID: $JENKINS_PID_VALUE"
        echo "Web interface will be available at: http://localhost:$HTTP_PORT"
        echo "Log file: $JENKINS_LOG"
        ;;
        
    stop)
        if [ ! -f "$JENKINS_PID" ]; then
            echo "Jenkins PID file not found. Jenkins may not be running."
            exit 1
        fi
        
        PID=$(cat "$JENKINS_PID")
        echo "Stopping Jenkins (PID: $PID)..."
        
        if kill -0 "$PID" 2>/dev/null; then
            kill "$PID"
            echo "Waiting for Jenkins to stop..."
            
            # Wait up to 30 seconds for graceful shutdown
            COUNTER=0
            while kill -0 "$PID" 2>/dev/null && [ $COUNTER -lt 30 ]; do
                sleep 1
                COUNTER=$((COUNTER + 1))
            done
            
            # Force kill if still running
            if kill -0 "$PID" 2>/dev/null; then
                echo "Force killing Jenkins..."
                kill -9 "$PID"
            fi
            
            rm -f "$JENKINS_PID"
            echo "Jenkins stopped"
        else
            echo "Jenkins process not found"
            rm -f "$JENKINS_PID"
        fi
        ;;
        
    status)
        if [ -f "$JENKINS_PID" ]; then
            PID=$(cat "$JENKINS_PID")
            if kill -0 "$PID" 2>/dev/null; then
                echo "Jenkins is running (PID: $PID)"
                echo "Web interface: http://localhost:$HTTP_PORT"
                echo "Configuration: Xms=$JVM_XMS Xmx=$JVM_XMX"
            else
                echo "Jenkins is not running (stale PID file found)"
                rm -f "$JENKINS_PID"
            fi
        else
            echo "Jenkins is not running"
        fi
        ;;
        
    restart)
        "$0" stop
        sleep 2
        "$0" start
        ;;
        
    logs)
        if [ -f "$JENKINS_LOG" ]; then
            tail -f "$JENKINS_LOG"
        else
            echo "Log file not found: $JENKINS_LOG"
            exit 1
        fi
        ;;
        
    config)
        echo "Jenkins Standalone Configuration:"
        echo "  HTTP Port: $HTTP_PORT"
        echo "  JVM Memory: Xms=$JVM_XMS Xmx=$JVM_XMX"
        echo "  JVM Options: $JVM_OPTS"
        echo "  Jenkins Options: $JENKINS_OPTS"
        echo "  Bind Address: $BIND_ADDRESS"
        echo "  Development Mode: $DEVELOPMENT_MODE"
        echo "  Jenkins Home: $JENKINS_HOME"
        echo "  Log Level: $LOG_LEVEL"
        echo ""
        echo "Configuration file: $CONFIG_FILE"
        ;;
        
    *)
        echo "Usage: $0 {start|stop|restart|status|logs|config}"
        echo ""
        echo "Commands:"
        echo "  start   - Start Jenkins server"
        echo "  stop    - Stop Jenkins server" 
        echo "  restart - Restart Jenkins server"
        echo "  status  - Show Jenkins status"
        echo "  logs    - Tail Jenkins logs"
        echo "  config  - Show current configuration"
        exit 1
        ;;
esac